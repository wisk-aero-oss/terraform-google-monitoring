
# https://terraform-docs.io/user-guide/configuration/

# Testing
# terraform-docs markdown . --recursive --output-file test.md

formatter: markdown
version: "0.20"
footer-from: ""
header-from: main.tf
#output:
#  file: README.md
#  mode: inject
#  template: |-
#      <!-- BEGIN_AUTOMATED_TF_DOCS_BLOCK -->
#      {{ .Content }}
#      <!-- END_AUTOMATED_TF_DOCS_BLOCK -->
output-values:
  enabled: false
  from: ""
recursive:
#  enabled: true
  enabled: false
  path: modules
#  path: examples
sections:
  hide: []
  show: []
settings:
  anchor: true
  color: true
  default: true
  description: true
  escape: true
  hide-empty: false
  html: true
  indent: 2
  lockfile: true
  read-comments: true
  required: true
  sensitive: true
  type: true
sort:
  enabled: true
  by: name

#{{- if .Module.OptionalInputs }}
#  {{"\n\t"}} # Optional variables
#  {{- range .Module.OptionalInputs }}
#    {{"\t"}} {{ .Name }}  = {{ .GetValue | printf "%s" }}
#  {{- end }}
#{{- end }}

# {{ range .Module.Resources }}
# - {{ .GetMode }}.{{ .Spec }} ({{ .Position.Filename }}#{{ .Position.Line }})
# {{- end }}

#  ## Examples
#  ```hcl
#  {{ include "examples/x/main.tf" }}
#  ```

# {{- /* a comment */ -}}
# {{ .Module }} # Gives header

# Use to setup module links
#{{ range readDir "modules" }}
#  {{ .Name }}
#{{ end }}
# os no tdefined
#{{ range os.ReadDir "modules" }}
#  {{ .Name }} --> {{ .IsDir }}
#{{ end }}
# file functions not working
#{{ if (fileExists "cover.jpg") -}}
#{{ if (file.Exists "/tmp/foo") }}yes{{else}}no{{end}}
#{{ if (file.IsDir "/tmp/foo") }}yes{{else}}no{{end}}
#readFIle
#  {{- /* a comment */ -}}
#  {{- /*
#  {{- if (fileExists "modules") }}
#    {{- range readDir "modules" }}
#      {{- if (fileExists "modules/{{ .Name }}README.md") }}
#        {{- {{ .Name }} | printf "modules/%s/README.md\n" }}
#      {{- end }}
#    {{- end }}
#  {{- end }}
#  */ -}}
#  {{- /* a comment */ -}}

content: |-
  {{ .Header }}

  ## Usage
  Basic usage of this module is as follows:

  ```hcl
  module "example" {
  {{"    " -}} source = "notablehealth/<module>/google"
  {{"    " -}} # Recommend pinning every module to a specific version
  {{"    " -}} # version = "x.x.x"
  {{- if .Module.RequiredInputs }}
  {{"\n    " -}} # Required variables
    {{- range .Module.RequiredInputs }}
      {{"    " -}}{{ .Name }} ={{ .GetValue }}
    {{- end }}
  {{- end }}
  }
  ```

  {{ .Requirements }}

  {{ .Providers }}

  {{ .Modules }}

  {{ .Resources }}

  {{ .Inputs }}

  {{ .Outputs }}

  {{ .Footer }}
